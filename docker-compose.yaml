version: '3'

services:
  service_1:
    build:
      context: .
      dockerfile: Dockerfile
      target: service_1
    environment:
      - PATH_PREFIX=/api/service_1
    labels:
      - traefik.enable=true
      - 'traefik.http.routers.zoc0g0g-0-http.rule=(Host(`${HOST}`) && PathPrefix(`/api/service_1`))'
      - traefik.http.routers.zoc0g0g-0-http.entryPoints=http
      - traefik.http.routers.zoc0g0g-0-http.middlewares=gzip
      - coolify.managed=true
      - coolify.applicationId=4
      - coolify.type=application

  service_2:
    build:
      context: .
      dockerfile: Dockerfile
      target: service_2
    environment:
      - PATH_PREFIX=/api/service_2
    labels:
      - traefik.enable=true
      - 'traefik.http.routers.zoc0g0g-0-http.rule=(Host(`${HOST}`) && PathPrefix(`/api/service_2`))'
      - traefik.http.routers.zoc0g0g-0-http.entryPoints=http
      - traefik.http.routers.zoc0g0g-0-http.middlewares=gzip
      - coolify.managed=true
      - coolify.applicationId=4
      - coolify.type=application

  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: web
    labels:
      - traefik.enable=true
      - 'traefik.http.routers.zoc0g0g-0-http.rule=(Host(`${HOST}`) && PathPrefix(`/`))'
      - traefik.http.routers.zoc0g0g-0-http.entryPoints=http
      - traefik.http.routers.zoc0g0g-0-http.middlewares=gzip
      - coolify.managed=true
      - coolify.applicationId=4
      - coolify.type=application

  # traefik:
  #   image: traefik:v2.11
  #   command: --providers.docker --api.insecure=true
  #   ports:
  #     - '80:80'
  #   # - '443:443'
  #   # - '8080:8080'
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   labels:
  #     - traefik.enable=true
  # - 'traefik.http.routers.test-http.rule=Host(`${HOST}`) && PathPrefix(`/`)'
  # - traefik.http.routers.test-http.entryPoints=http
  # - traefik.http.routers.test-http.middlewares=gzip
  # - coolify.managed=true
  # - coolify.applicationId=4
  # - coolify.type=application
